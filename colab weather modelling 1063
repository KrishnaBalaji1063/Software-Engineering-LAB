import numpy as np
import matplotlib.pyplot as plt

def find_roots(a, b, c):
    delta = b**2 - 4*a*c
    if delta > 0:
        return ((-b + np.sqrt(delta)) / (2 * a), (-b - np.sqrt(delta)) / (2 * a))
    elif delta == 0:
        return (-b / (2 * a),)
    else:
        return None

def visualize_quadratic(a, b, c):
    x_vals = np.linspace(-10, 10, 500)
    y_vals = a * x_vals**2 + b * x_vals + c
    plt.figure(figsize=(9, 6))
    plt.plot(x_vals, y_vals, label=f"{a}x² + {b}x + {c}")
    plt.axhline(0, color='gray', linestyle='--', linewidth=0.8)
    plt.axvline(0, color='gray', linestyle='--', linewidth=0.8)
    plt.title("Graph of Quadratic Function")
    plt.xlabel("X")
    plt.ylabel("Y")
    plt.legend()
    plt.grid(visible=True, alpha=0.6)
    plt.show()

def handle_input(choice):
    if choice == 1:
        coefficients = (1, -3, 2)
    elif choice == 2:
        coefficients = tuple(map(float, input("Enter values for a, b, c: ").split()))
    elif choice == 3:
        coefficients = (2, -4, -6)
        print(f"Using: {coefficients}")
    elif choice == 4:
        multiple_sets = [(1, -3, 2), (1, 0, -4), (2, -4, -6)]
        for coeffs in multiple_sets:
            print(f"Solving for: {coeffs}")
            solve_and_show(*coeffs)
        return
    elif choice == 5:
        file_name = input("Enter file path: ").strip()
        try:
            coeffs_list = np.loadtxt(file_name, dtype=float)
            if coeffs_list.ndim == 1:
                coeffs_list = [coeffs_list]
            for coeffs in coeffs_list:
                if len(coeffs) == 3:
                    print(f"Solving for: {tuple(coeffs)}")
                    solve_and_show(*coeffs)
                else:
                    print(f"Skipping: {coeffs}")
            return
        except Exception as e:
            print(f"File error: {e}")
            return
    else:
        print("Invalid option.")
        return

    solve_and_show(*coefficients)

def solve_and_show(a, b, c):
    print(f"Equation: {a}x² + {b}x + {c} = 0")
    roots = find_roots(a, b, c)
    if roots:
        print(f"Roots: {roots}")
    else:
        print("No real roots.")
    visualize_quadratic(a, b, c)

if __name__ == "__main__":
    print("Choose an option:")
    print("1. Hardcoded values")
    print("2. Enter values manually")
    print("3. Single example")
    print("4. Multiple examples")
    print("5. File input")
    try:
        user_choice = int(input("Your choice: "))
        handle_input(user_choice)
    except ValueError:
        print("Please enter a number between 1 and 5.")
